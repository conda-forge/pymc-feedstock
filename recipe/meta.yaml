{% set version = "5.0.1" %}

package:
  name: pymc-suite  # https://github.com/conda/conda-build/issues/3933
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/p/pymc/pymc-{{ version }}.tar.gz
  sha256: d8dfed979f26d254f4f584352424854bf68c0e86a533b10addd3aa2c68933b8a

build:
  number: 0

outputs:
  - name: pymc-base
    build:
      noarch: python
      script:
        - python -m pip install . --no-deps -vv
    requirements:
      host:
        - python >=3.8
        - pip
      run:
        - python >=3.8
        # https://github.com/pymc-devs/pymc/blob/v{{ version }}/requirements.txt
        - arviz >=0.13.0
        - cachetools >=4.2.1
        - cloudpickle
        - fastprogress >=0.2.0
        - numpy >=1.15.0
        - pandas >=0.24.0
        - pytensor-base ==2.8.10
        - scipy >=1.4.1
        - typing-extensions >=3.7.4
    test:
      imports:
        - pymc
        - pymc.backends
        - pymc.distributions
        - pymc.gp
        - pymc.step_methods
        - pymc.tests
        - pymc.tuning
        - pymc.variational
        - pymc.ode
      commands:
        - pip check
        - python check-for-warnings.py allowed-warnings-base.txt
      requires:
        - pip
      files:
        - check-for-warnings.py
        - allowed-warnings-base.txt
  - name: pymc
    build:
      noarch: python
      script:
        - echo "Nothing to build here, just add dependencies."
    requirements:
      run:
        - {{ pin_subpackage("pymc-base", exact=True) }}
        # In PyTensor, there is a 1-1 correspondence between the "pytensor-base"
        # package and the "pytensor" package of the same version and build number on
        # which it depends. Thus the pin from the "pytensor-base" package above will
        # implicitly transfer here to the "pytensor" package.
        - pytensor
    test:
      imports:
        - pymc
        - pymc.backends
        - pymc.distributions
        - pymc.gp
        - pymc.step_methods
        - pymc.tests
        - pymc.tuning
        - pymc.variational
        - pymc.ode
      commands:
        - pip check
        - python check-for-warnings.py allowed-warnings-main.txt
      requires:
        - pip
      files:
        - check-for-warnings.py
        - allowed-warnings-main.txt

about:
  home: http://github.com/pymc-devs/pymc
  license: Apache-2.0
  license_file: LICENSE
  license_family: Apache
  summary: Probabilistic Programming in Python

extra:
  recipe-maintainers:
    - ericmjl
    - twiecki
    - fonnesbeck
    - ocefpaf
    - michaelosthege
    - maresb
    - ricardoV94
