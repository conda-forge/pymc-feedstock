{% set version = "4.1.2" %}

package:
  name: pymc-suite  # https://github.com/conda/conda-build/issues/3933
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/p/pymc/pymc-{{ version }}.tar.gz
  sha256: 2d0c178b72099b9294c6e1a017976a5ebeda9cb8b31c22797846df37f6826044

build:
  number: 0
  skip: true  # [py<37]

outputs:
  - name: pymc-base
    build:
      script:
        - python -m pip install . --no-deps -vv
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - python
        - pip
      run:
        - python
        # https://github.com/pymc-devs/pymc/blob/v{{ version }}/requirements.txt
        - aeppl ==0.0.31
        - aesara ==2.7.3
        - arviz >=0.12.0
        - cachetools >=4.2.1
        - cloudpickle
        - fastprogress >=0.2.0
        - numpy >=1.15.0
        - pandas >=0.24.0
        - scipy >=1.4.1
        - typing-extensions >=3.7.4
    test:
      imports:
        - pymc
        - pymc.backends
        - pymc.distributions
        - pymc.gp
        - pymc.step_methods
        - pymc.tests
        - pymc.tuning
        - pymc.variational
        - pymc.ode
      commands:
        - pip check
        - python check-for-warnings.py allowed-warnings-base.txt
      requires:
        - pip
      files:
        - check-for-warnings.py
        - allowed-warnings-base.txt
  - name: pymc
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("pymc-base", exact=True) }}
        - cxx-compiler  # [not win]
        - m2w64-toolchain  # [win]
        # BLAS:
        # On Apple M1, use openblas, for everything else, use mkl-service.
        - openblas  # [arm64]
        - mkl-service  # [not arm64]
    test:
      imports:
        - pymc
        - pymc.backends
        - pymc.distributions
        - pymc.gp
        - pymc.step_methods
        - pymc.tests
        - pymc.tuning
        - pymc.variational
        - pymc.ode
      commands:
        - pip check
        - python check-for-warnings.py allowed-warnings-main.txt
      requires:
        - pip
      files:
        - check-for-warnings.py
        - allowed-warnings-main.txt

about:
  home: http://github.com/pymc-devs/pymc
  license: Apache-2.0
  license_file: LICENSE
  license_family: Apache
  summary: Probabilistic Programming in Python

extra:
  recipe-maintainers:
    - ericmjl
    - twiecki
    - fonnesbeck
    - ocefpaf
    - michaelosthege
    - maresb
    - ricardoV94
